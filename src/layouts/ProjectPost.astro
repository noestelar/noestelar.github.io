---
import Layout from "../layouts/Layout.astro";
import Body from "../components/Body.astro";
import NavigationBar from "../components/navigationBar/navigationBar.astro";
import Content from "../components/Content.astro";
import { IoLogoGithub } from "react-icons/io5/index.js";
import { IoChevronBackOutline } from "react-icons/io5/index.js";
import {
  getLangFromUrl,
  getRelativeLocaleUrl,
  useTranslations,
} from "@i18n/utils";
import Footer from "./footer.astro";
import { Image } from "astro:assets";

export interface Props {
  content: {
    title: string;
    description: string;
    thumbnail?: string;
    githubLink: string;
    website?: string;
    platform: string;
    stack: string;
  };
}

const {
  content: {
    title,
    description,
    thumbnail,
    githubLink,
    website,
    platform,
    stack,
  },
} = Astro.props;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Import the image dynamically
const thumbnailImage = thumbnail
  ? await import(`../assets/${thumbnail}`)
  : null;
---

<!doctype html>
<Layout title={"NoÃ© Rivera - " + title}>
  <Body>
    <main class="pt-[56px]">
      <Content className="pt-6 px-8">
        <span class="">
          <a
            href={getRelativeLocaleUrl(lang, "works")}
            class="text-blue-500 dark:text-cyaned-500 text-md"
          >
            <IoChevronBackOutline className={"inline"} />
            {t("works.button")}
          </a>
        </span>
        <div class="mt-2 mb-8">
          {
            thumbnailImage && (
              <Image
                class="border border-slate-300 dark:border-zinc-700 rounded-xl"
                src={thumbnailImage.default}
                alt={title}
                width={720}
                height={360}
              />
            )
          }
        </div>
        <h1 class="my-1 text-3xl font-quicksand">{title}</h1>
        <div>{description}</div>
        <hr class="my-4 border-top border-zinc-400" />

        <ul class="flex flex-col gap-2 my-5 text-sm font-portal">
          <li>
            <span
              class="p-1 bg-green-300 rounded-lg text-cyaned-500 dark:bg-cyaned-900 dark:text-green-300"
              >Website</span
            >
            <a
              class="ml-1 text-blue-500 dark:text-pink-400"
              href={website !== "" ? website : ""}
              target="_blank">{website ? website : "Not available"}</a
            >
          </li>
          <li>
            <span
              class="p-1 bg-green-300 rounded-lg text-cyaned-500 dark:bg-cyaned-900 dark:text-green-300"
              >Platform</span
            >
            <span class="ml-1">{platform}</span>
          </li>
          <li>
            <span
              class="p-1 bg-green-300 rounded-lg text-cyaned-500 dark:bg-cyaned-900 dark:text-green-300"
              >Stack</span
            >
            <span class="ml-1">{stack}</span>
          </li>
        </ul>
        <div>
          <slot />
        </div>
        <span
          class="text-2xl underline list-disc underline-offset-2 hover:text-cyaned-500 decoration-cyaned-500"
        ></span>

        <ul class="flex flex-row mt-10">
          <li class="inline-block">
            <a
              href={githubLink}
              target="_blank"
              class="px-4 py-2 rounded-lg bg-cyaned-50 dark:text-cyaned-500 text-cyaned-700 font-portal dark:bg-cyaned-900"
            >
              <span style="font-size: 18px;">
                <IoLogoGithub className={"inline"} />
              </span>
              <span class="mx-2"> Source</span>
            </a>
          </li>
        </ul>
      </Content>
    </main>
  </Body>
  <Footer />
</Layout>
