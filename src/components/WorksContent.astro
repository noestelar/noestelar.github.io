---
import ProjectCard from "@components/projects/projectCard.astro";
import { getLangFromUrl, useTranslations } from "@i18n/utils";
import { getCollection } from "astro:content";

// Use import.meta.glob without the explicit ImageMetadata generic for now
const allThumbnails = import.meta.glob('../assets/**/*.{jpeg,jpg,png,webp,gif,svg,avif}');

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const pages = await getCollection("projects", ({ id }) => {
  return id.startsWith(lang);
});

const posts = await Promise.all(
  pages.map(async (page) => {
    const [lang, ...slug] = page.slug.split("/");
    let thumbnailUrl: any; // Use 'any' for now to avoid import issues

    if (page.data.thumbnail) {
      try {
        let thumbnailPathKey = page.data.thumbnail;
        if (thumbnailPathKey.startsWith('/')) {
          thumbnailPathKey = thumbnailPathKey.substring(1);
        }
        const fullImportPath = `../assets/${thumbnailPathKey}`;

        if (allThumbnails[fullImportPath]) {
          const thumbnailModule = await allThumbnails[fullImportPath]();
          // Assuming the module has a 'default' property for the image data
          if (typeof thumbnailModule === 'object' && thumbnailModule !== null && 'default' in thumbnailModule) {
            thumbnailUrl = (thumbnailModule as { default: any }).default;
          } else {
            console.error(`Dynamically imported module for ${fullImportPath} does not have a 'default' export or is not an object.`);
            thumbnailUrl = undefined; // Or handle as error
          }
        } else {
          console.error(`Thumbnail not found: ${fullImportPath}. Original path in frontmatter: "${page.data.thumbnail}". Check if the file exists at src/assets/${thumbnailPathKey} and the glob pattern is correct.`);
        }
      } catch (error) {
        console.error(`Error processing thumbnail for "${page.data.thumbnail}":`, error);
      }
    }

    return {
      params: { lang, slug: slug.join("/") || undefined },
      props: page,
      data: { ...page.data, thumbnailUrl },
    };
  }),
);
---

<main class="flex items-center justify-center">
  <section class="w-full max-w-screen-md p-10 mt-10 sm:mx-0">
    <h1 class="text-4xl font-medium font-mplus mb-8">
      <span class="text-cyaned-500">{t("works.heading")}</span>
    </h1>
    <p class="mb-8 text-lg">{t("works.description")}</p>
    <ul class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-2 gap-14">
      {
        posts.map((project) => (
          <li>
            <a href={`/${project.params.lang}/works/${project.params.slug}`}>
              <ProjectCard
                title={project.data.title}
                url={project.data.website}
                thumbnail={project.data.thumbnailUrl}
              >
                {project.data.description}
              </ProjectCard>
            </a>
          </li>
        ))
      }
    </ul>
  </section>
</main>

